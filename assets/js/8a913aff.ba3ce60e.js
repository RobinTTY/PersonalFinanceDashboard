"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7052],{6608:(n,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>e,toc:()=>d});const e=JSON.parse('{"id":"DatabaseSchema","title":"Database Schema","description":"The application uses a relational database to store financial data. Below is the entity-relationship diagram showing the main entities and their relationships:","source":"@site/dev/DatabaseSchema.md","sourceDirName":".","slug":"/DatabaseSchema","permalink":"/PersonalFinanceDashboard/dev/DatabaseSchema","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"community","previous":{"title":"Stock Market APIs","permalink":"/PersonalFinanceDashboard/dev/stock-market-apis"}}');var i=a(4848),r=a(8453);const s={},o="Database Schema",c={},d=[{value:"Entity Descriptions",id:"entity-descriptions",level:2},{value:"BankAccount",id:"bankaccount",level:3},{value:"Transaction",id:"transaction",level:3},{value:"Tag",id:"tag",level:3},{value:"BankingInstitution",id:"bankinginstitution",level:3},{value:"AuthenticationRequest",id:"authenticationrequest",level:3},{value:"ThirdPartyDataRetrievalMetadata",id:"thirdpartydataretrievalmetadata",level:3}];function h(n){const t={h1:"h1",h2:"h2",h3:"h3",header:"header",mermaid:"mermaid",p:"p",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"database-schema",children:"Database Schema"})}),"\n",(0,i.jsx)(t.p,{children:"The application uses a relational database to store financial data. Below is the entity-relationship diagram showing the main entities and their relationships:"}),"\n",(0,i.jsx)(t.mermaid,{value:'erDiagram\n    BankAccount ||--o{ Transaction : has\n    BankAccount }|--|| BankingInstitution : "associated with"\n    BankAccount }|--o{ AuthenticationRequest : "associated with"\n    Transaction }o--o{ Tag : has\n    ThirdPartyDataRetrievalMetadata |o--|| ThirdPartyDataType : tracks\n\n    BankAccount {\n        Guid Id PK\n        Guid ThirdPartyId\n        string Name\n        string Iban\n        string Bic\n        string Bban\n        decimal Balance\n        string Currency\n        string OwnerName\n        string AccountType\n        string Description\n        Guid AssociatedInstitutionId FK\n    }\n\n    Transaction {\n        Guid Id PK\n        Guid ThirdPartyId\n        string TransactionId\n        Guid BankAccountId FK\n        DateTime ValueDate\n        string Creditor\n        string Debtor\n        decimal Amount\n        string Currency\n        string Category\n        string Notes\n    }\n\n    Tag {\n        Guid Id PK\n        string Name\n        string Description\n        string Color\n    }\n\n    BankingInstitution {\n        Guid Id PK\n        Guid ThirdPartyId\n        string Name\n        string Bic\n        Uri LogoUri\n        string[] Countries\n    }\n\n    AuthenticationRequest {\n        Guid Id PK\n        Guid ThirdPartyId\n        AuthenticationStatus Status\n        Uri AuthenticationLink\n    }\n\n    ThirdPartyDataRetrievalMetadata {\n        Guid Id PK\n        ThirdPartyDataType DataType\n        ThirdPartyDataSource DataSource\n        DateTime LastRetrievalTime\n        TimeSpan RetrievalInterval\n    }'}),"\n",(0,i.jsx)(t.h2,{id:"entity-descriptions",children:"Entity Descriptions"}),"\n",(0,i.jsx)(t.h3,{id:"bankaccount",children:"BankAccount"}),"\n",(0,i.jsx)(t.p,{children:"Represents a bank account with its basic information like IBAN, balance, and currency. Each account is associated with a banking institution and can have multiple authentication requests."}),"\n",(0,i.jsx)(t.h3,{id:"transaction",children:"Transaction"}),"\n",(0,i.jsx)(t.p,{children:"Stores financial transactions linked to bank accounts. Each transaction has details about the amount, currency, parties involved (creditor/debtor), and can be tagged for categorization."}),"\n",(0,i.jsx)(t.h3,{id:"tag",children:"Tag"}),"\n",(0,i.jsx)(t.p,{children:"Allows categorization of transactions through a many-to-many relationship. Tags have a name, description, and can be color-coded for visual distinction."}),"\n",(0,i.jsx)(t.h3,{id:"bankinginstitution",children:"BankingInstitution"}),"\n",(0,i.jsx)(t.p,{children:"Contains information about banks and financial institutions, including their BIC (Bank Identifier Code) and supported countries."}),"\n",(0,i.jsx)(t.h3,{id:"authenticationrequest",children:"AuthenticationRequest"}),"\n",(0,i.jsx)(t.p,{children:"Tracks authentication status with third-party data providers."}),"\n",(0,i.jsx)(t.h3,{id:"thirdpartydataretrievalmetadata",children:"ThirdPartyDataRetrievalMetadata"}),"\n",(0,i.jsx)(t.p,{children:"Manages the synchronization of data with third-party data providers by tracking when data was last retrieved and how often it should be updated."})]})}function u(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}},8453:(n,t,a)=>{a.d(t,{R:()=>s,x:()=>o});var e=a(6540);const i={},r=e.createContext(i);function s(n){const t=e.useContext(r);return e.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function o(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),e.createElement(r.Provider,{value:t},n.children)}}}]);