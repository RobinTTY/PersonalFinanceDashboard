"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[476],{7769:(n,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=a(5893),e=a(1151);const r={},s="Database Schema",o={id:"implementation/DatabaseSchema",title:"Database Schema",description:"The application uses a relational database to store financial data. Below is the entity-relationship diagram showing the main entities and their relationships:",source:"@site/docs/implementation/DatabaseSchema.md",sourceDirName:"implementation",slug:"/implementation/DatabaseSchema",permalink:"/PersonalFinanceDashboard/docs/implementation/DatabaseSchema",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},d=[{value:"Entity Descriptions",id:"entity-descriptions",level:2},{value:"BankAccount",id:"bankaccount",level:3},{value:"Transaction",id:"transaction",level:3},{value:"Tag",id:"tag",level:3},{value:"BankingInstitution",id:"bankinginstitution",level:3},{value:"AuthenticationRequest",id:"authenticationrequest",level:3},{value:"ThirdPartyDataRetrievalMetadata",id:"thirdpartydataretrievalmetadata",level:3}];function h(n){const t=Object.assign({h1:"h1",p:"p",pre:"pre",code:"code",h2:"h2",h3:"h3"},(0,e.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"database-schema",children:"Database Schema"}),"\n",(0,i.jsx)(t.p,{children:"The application uses a relational database to store financial data. Below is the entity-relationship diagram showing the main entities and their relationships:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-mermaid",children:'erDiagram\n    BankAccount ||--o{ Transaction : has\n    BankAccount }|--|| BankingInstitution : "associated with"\n    BankAccount }|--o{ AuthenticationRequest : "associated with"\n    Transaction }o--o{ Tag : has\n    ThirdPartyDataRetrievalMetadata |o--|| ThirdPartyDataType : tracks\n\n    BankAccount {\n        Guid Id PK\n        Guid ThirdPartyId\n        string Name\n        string Iban\n        string Bic\n        string Bban\n        decimal Balance\n        string Currency\n        string OwnerName\n        string AccountType\n        string Description\n        Guid AssociatedInstitutionId FK\n    }\n\n    Transaction {\n        Guid Id PK\n        Guid ThirdPartyId\n        string TransactionId\n        Guid BankAccountId FK\n        DateTime ValueDate\n        string Creditor\n        string Debtor\n        decimal Amount\n        string Currency\n        string Category\n        string Notes\n    }\n\n    Tag {\n        Guid Id PK\n        string Name\n        string Description\n        string Color\n    }\n\n    BankingInstitution {\n        Guid Id PK\n        Guid ThirdPartyId\n        string Name\n        string Bic\n        Uri LogoUri\n        string[] Countries\n    }\n\n    AuthenticationRequest {\n        Guid Id PK\n        Guid ThirdPartyId\n        AuthenticationStatus Status\n        Uri AuthenticationLink\n    }\n\n    ThirdPartyDataRetrievalMetadata {\n        Guid Id PK\n        ThirdPartyDataType DataType\n        ThirdPartyDataSource DataSource\n        DateTime LastRetrievalTime\n        TimeSpan RetrievalInterval\n    }\n'})}),"\n",(0,i.jsx)(t.h2,{id:"entity-descriptions",children:"Entity Descriptions"}),"\n",(0,i.jsx)(t.h3,{id:"bankaccount",children:"BankAccount"}),"\n",(0,i.jsx)(t.p,{children:"Represents a bank account with its basic information like IBAN, balance, and currency. Each account is associated with a banking institution and can have multiple authentication requests."}),"\n",(0,i.jsx)(t.h3,{id:"transaction",children:"Transaction"}),"\n",(0,i.jsx)(t.p,{children:"Stores financial transactions linked to bank accounts. Each transaction has details about the amount, currency, parties involved (creditor/debtor), and can be tagged for categorization."}),"\n",(0,i.jsx)(t.h3,{id:"tag",children:"Tag"}),"\n",(0,i.jsx)(t.p,{children:"Allows categorization of transactions through a many-to-many relationship. Tags have a name, description, and can be color-coded for visual distinction."}),"\n",(0,i.jsx)(t.h3,{id:"bankinginstitution",children:"BankingInstitution"}),"\n",(0,i.jsx)(t.p,{children:"Contains information about banks and financial institutions, including their BIC (Bank Identifier Code) and supported countries."}),"\n",(0,i.jsx)(t.h3,{id:"authenticationrequest",children:"AuthenticationRequest"}),"\n",(0,i.jsx)(t.p,{children:"Tracks authentication status with third-party data providers."}),"\n",(0,i.jsx)(t.h3,{id:"thirdpartydataretrievalmetadata",children:"ThirdPartyDataRetrievalMetadata"}),"\n",(0,i.jsx)(t.p,{children:"Manages the synchronization of data with third-party data providers by tracking when data was last retrieved and how often it should be updated."})]})}const u=function(n={}){const{wrapper:t}=Object.assign({},(0,e.ah)(),n.components);return t?(0,i.jsx)(t,Object.assign({},n,{children:(0,i.jsx)(h,n)})):h(n)}},1151:(n,t,a)=>{a.d(t,{Zo:()=>o,ah:()=>r});var i=a(7294);const e=i.createContext({});function r(n){const t=i.useContext(e);return i.useMemo((()=>"function"==typeof n?n(t):{...t,...n}),[t,n])}const s={};function o({components:n,children:t,disableParentContext:a}){let o;return o=a?"function"==typeof n?n({}):n||s:r(n),i.createElement(e.Provider,{value:o},t)}}}]);