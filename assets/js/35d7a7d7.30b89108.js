"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3667],{1875:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"essential-features","title":"Essential Features","description":"The features I want to implement for version 1.0 are as follows:","source":"@site/dev/Essential Features.md","sourceDirName":".","slug":"/essential-features","permalink":"/PersonalFinanceDashboard/dev/essential-features","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"essential-features","title":"Essential Features","sidebar_position":3},"sidebar":"community","previous":{"title":"Application Architecture","permalink":"/PersonalFinanceDashboard/dev/application-architecture"},"next":{"title":"Banking APIs","permalink":"/PersonalFinanceDashboard/dev/banking-apis"}}');var i=t(4848),o=t(8453);const a={id:"essential-features",title:"Essential Features",sidebar_position:3},r=void 0,l={},c=[];function d(e){const n={li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The features I want to implement for version 1.0 are as follows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Account Management","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Add accounts like bank, credit card, investment account, etc. to manage inflows/outflows of money"}),"\n",(0,i.jsx)(n.li,{children:"Display current balance of each account"}),"\n",(0,i.jsx)(n.li,{children:"Automatic import of transactions through Banking APIs"}),"\n",(0,i.jsx)(n.li,{children:"Each account should have a graph to visualize the balance over time"}),"\n",(0,i.jsx)(n.li,{children:"Another graph to visualize the outgoing money by category/tag would also be nice"}),"\n",(0,i.jsx)(n.li,{children:"Transactions may have multiple categories associated with them (e.g. you go to the super market and buy electronics/food/etc. and want to split it into electronics/food category)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Transaction Management","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Add transactions which interact with accounts by adding/substracting money from them"}),"\n",(0,i.jsx)(n.li,{children:"Transactions should have a date, amount, payee, category and optional tags/description"}),"\n",(0,i.jsx)(n.li,{children:"Recurring transactions should be possible to setup (e.g. monthly payments)"}),"\n",(0,i.jsx)(n.li,{children:"Have an overview screen that lists transactions from all accounts and detailed lists filtered by account, category, etc."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Reports","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Net Worth => bar chart displaying the net worth/debt over time"}),"\n",(0,i.jsx)(n.li,{children:"Outflows report => pie chart breakdown of outflows by category/tag/payee and a bar chart to show the trend for each category/tag/payee over time"}),"\n",(0,i.jsx)(n.li,{children:"Cashflow report which lists all categories and their associated income/expenses grouped by month/year/customizable timeframe"}),"\n",(0,i.jsx)(n.li,{children:"Simple inflow/outflow statement that gives the inflow and outflow of money for a month so you can easily see if you are saving money or are spending it"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Budget","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Allocating money to categories and giving the information how much money is still available to budget","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Saving Goals","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A user should be able to setup a saving goal with a specific target amount which can be worked towards"}),"\n",(0,i.jsx)(n.li,{children:"Transactions directed towards the saving goals should decrease the remaining amount needed to achieve the goal"}),"\n",(0,i.jsx)(n.li,{children:"Progress should be visualized and a time estimate to achieve the goal should be provided based on the average saving amount per month"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These goals require considerable work and should maybe go into the next version:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Investment Account Tracking","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Have specialized investment accounts which take into account current asset prizes (stocks) to give an accurate net worth overview (if stocks appreciate the net worth should do too)"}),"\n",(0,i.jsx)(n.li,{children:"Provide charts for stock prices if possible"}),"\n",(0,i.jsx)(n.li,{children:"Provide information about dividends if possible"}),"\n",(0,i.jsx)(n.li,{children:"Import of statements from investment accounts (prototype for etoro.com) to integrate those transactions"}),"\n",(0,i.jsx)(n.li,{children:"Provide risk scores for assets (There are established ways to calculate those based on volitility and other factors)"}),"\n",(0,i.jsxs)(n.li,{children:["Have a note section for each asset purchase to provide user a way to document the reasoning behind the purchase","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Good way for the user to later identify mistakes in decision making and improve upon them"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Indicators (which could be consumed from external sources)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"PMI Indices"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(6540);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);