// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RobinTTY.PersonalFinanceDashboard.Infrastructure;

#nullable disable

namespace RobinTTY.PersonalFinanceDashboard.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241112005322_AddTransactionsNavigationToTag")]
    partial class AddTransactionsNavigationToTag
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("RobinTTY.PersonalFinanceDashboard.Core.Models.AuthenticationRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthenticationLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AuthenticationRequests");
                });

            modelBuilder.Entity("RobinTTY.PersonalFinanceDashboard.Core.Models.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountType")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssociatedInstitutionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthenticationRequestId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bban")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Iban")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedInstitutionId");

                    b.HasIndex("AuthenticationRequestId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("RobinTTY.PersonalFinanceDashboard.Core.Models.BankingInstitution", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bic")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Countries")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LogoUri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BankingInstitutions");
                });

            modelBuilder.Entity("RobinTTY.PersonalFinanceDashboard.Core.Models.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("RobinTTY.PersonalFinanceDashboard.Core.Models.ThirdPartyDataRetrievalMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DataSource")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DataType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastRetrievalTime")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("RetrievalInterval")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ThirdPartyDataRetrievalMetadata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f948e52f-ad17-44b8-9cdf-e0b952f139b3"),
                            DataSource = 1,
                            DataType = 1,
                            LastRetrievalTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RetrievalInterval = new TimeSpan(7, 0, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("0b53ec13-5a8c-4910-bfff-1ba06c3f3859"),
                            DataSource = 1,
                            DataType = 2,
                            LastRetrievalTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RetrievalInterval = new TimeSpan(7, 0, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("RobinTTY.PersonalFinanceDashboard.Core.Models.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BankAccountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Payee")
                        .HasColumnType("TEXT");

                    b.Property<string>("Payer")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ValueDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("TagTransaction", b =>
                {
                    b.Property<string>("TagsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionsId")
                        .HasColumnType("TEXT");

                    b.HasKey("TagsId", "TransactionsId");

                    b.HasIndex("TransactionsId");

                    b.ToTable("TagTransaction");
                });

            modelBuilder.Entity("RobinTTY.PersonalFinanceDashboard.Core.Models.BankAccount", b =>
                {
                    b.HasOne("RobinTTY.PersonalFinanceDashboard.Core.Models.BankingInstitution", "AssociatedInstitution")
                        .WithMany()
                        .HasForeignKey("AssociatedInstitutionId");

                    b.HasOne("RobinTTY.PersonalFinanceDashboard.Core.Models.AuthenticationRequest", null)
                        .WithMany("AssociatedAccounts")
                        .HasForeignKey("AuthenticationRequestId");

                    b.Navigation("AssociatedInstitution");
                });

            modelBuilder.Entity("RobinTTY.PersonalFinanceDashboard.Core.Models.Transaction", b =>
                {
                    b.HasOne("RobinTTY.PersonalFinanceDashboard.Core.Models.BankAccount", null)
                        .WithMany("Transactions")
                        .HasForeignKey("BankAccountId");
                });

            modelBuilder.Entity("TagTransaction", b =>
                {
                    b.HasOne("RobinTTY.PersonalFinanceDashboard.Core.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RobinTTY.PersonalFinanceDashboard.Core.Models.Transaction", null)
                        .WithMany()
                        .HasForeignKey("TransactionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RobinTTY.PersonalFinanceDashboard.Core.Models.AuthenticationRequest", b =>
                {
                    b.Navigation("AssociatedAccounts");
                });

            modelBuilder.Entity("RobinTTY.PersonalFinanceDashboard.Core.Models.BankAccount", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
